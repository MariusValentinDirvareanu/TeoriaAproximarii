==Cerinta 2==
Rezultat: 3.552714e-15
Explicatie: 
Rezultatul obtinut arata diferenta dintre aproximarea interpolantului Lagrange pe portiuni si functia data (f=2*x+A) evaluata in fiecare xval, facandu-se norma 2. Valoarea este foarte apropiata de 0 datorita aproximarii foarte bune.


==Cerinta 3==
figure(1);
% inline este vechi si va fi scos in versiunile anterioare de Matlab
% f=inline('sin(x+A)');
xval=0:0.01:pi/2;
f=@(x) (sin(x+A));
rez=feval(f,xval);
plot(xval,rez,'b');
hold on;
x1=linspace(0,pi/2,5);
yval1=interpliniar(x1,f,xval);
plot(xval,yval1,'r');
hold on;
x2=linspace(0,pi/2,9);
yval2=interpliniar(x2,f,xval);
plot(xval,yval2,'y');
hold on;
x3=linspace(0,pi/2,17);
yval3=interpliniar(x3,f,xval);
plot(xval,yval3,'magenta');
legend('Functia evaluata in xval','Functia evaluata in x1','Functia evaluata in x2','Functia evaluata in x3');
Explicatie: 
Graficul arata efectul impartirii intervalului [0,pi/2] in cat mai multe bucati. Cu cat sunt mai multe bucati, cu atat aproximarea este mai buna.


==Cerinta 4==
function [eroaref,eroarefprim]=calcul_erori(n)
A = log2(sum(double('DIRVAREANUMARIUS')));
x=linspace(0,pi/2,n+1);
y=sin(x)+A;
eroaref=0;
eroarefprim=0;
for i=1:n
c=polyfit(x,y,1);
c1=c(1);
c2=c(2);
% g=inline( '(sin(t)+A-(c1*t+c2)).^2','t','c1','c2');
g=@(t,c1,c2) ((sin(t)+A-(c1*t+c2)).^2);
er= quad(@(t)g(t,c1,c2),0,pi/2);
eroaref=eroaref+ er;
% inline va fi scos in urmatoarele versiuni de Matlab
% g=inline( '(cos(t)-c1).^2','t','c1');
g=@(t,c1) ((cos(t)-c1).^2);
er= quad(@(t)g(t,c1),0,pi/2);
eroarefprim=eroarefprim+ er;
end
eroaref=eroaref^0.5;
eroarefprim=eroarefprim^0.5;
end


==Cerinta 5==
Explicatie: 
e1, e2, e3, e4 reprezinta eroarile aprozimatii functiei f pe subintervalele 4, 8, 16, 32, iar e1p, e2p, e3p, e4p reprezinta erorile aproximarii primei derivate a functiei f pe aceleasi subintervale.
e1/e2=7.786001e-01
e2/e3=7.270662e-01
e3/e4=7.122808e-01
e1p/e2p=7.062724e-01
e2p/e3p=7.064126e-01
e3p/e4p=7.066716e-01
Explicatie: 
Din rezultatele de mai sus se observa o diferenta foarte mica intre erori, acestea fiind aproximative intre ele, atat pentru functia f, cat si pentru prima derivata a acesteia.


==Cerinta 5 Interpolantul continuu, cuadratic pe portiuni==
function yval=interpcuadratic(x,f,xval)
n=length(x);
yval=xval;
for k=1:length(xval)
i=sum(x<=xval(k));
if(i==n) 
i=n-1; 
end
xx=[x(i),(x(i)+x(i+1))/2,x(i+1)];
yy=feval(f,xx);
c=polyfit(xx,yy,2);
yval(k)= c(1)*xval(k)^2+c(2)*xval(k)+c(3);
end
end


==Cerinta 6==
Rezultat: 3.019807e-14
Explicatie: 
Rezultatul obtinut arata diferenta dintre aproximarea interpolantului Lagrange pe portiuni si functia data (f=2*x^2-A) evaluata in fiecare xval, facandu-se norma 2. Valoarea este foarte apropiata de 0 datorita aproximarii foarte bune.


==Cerinta 7==
f=@(x) (sin(x+A));
xval=0:0.2:pi/2;
figure(2);
yval0=feval(f,xval);
plot(xval,yval0,'r');
hold on;
x1=linspace(0,pi/2,2);
yval1=interpcuadratic(x1,f,xval);
plot(xval,yval1,'b');
hold on;
x2=linspace(0,pi/2,3);
yval2=interpcuadratic(x2,f,xval);
plot(xval,yval2,'y');
legend('Functia evaluata in xval','Functia evaluata in x1','Functia evaluata in x2');
Explicatie: 
Graficul arata efectul impartirii intervalului [0,pi/2] in cat mai multe bucati. Cu cat sunt mai multe bucati, cu atat aproximarea este mai buna.


==Cerinta 8==
function [eroaref,eroarefprim]=calcul_erori_quad(n)
A = log2(sum(double('DIRVAREANUMARIUS')));
x=linspace(0,pi/2,n+1);
eroaref=0;
eroarefprim=0;
for i=1:n
xx=[x(i),(x(i)+x(i+1))/2,x(i+1)];
yy=sin(xx)+A;
c=polyfit(xx,yy,2);
c1=c(1);c2=c(2);c3=c(3);
% g=inline( '(sin(t)+A-(c1*t^2+c2*t+c3)).^2','t','c1','c2','c3');
g=@(t,c1,c2,c3) ((sin(t)+A-(c1*t.^2+c2*t+c3)).^2);
er= quad(@(t)g(t,c1,c2,c3),x(i),x(i+1));
eroaref=eroaref+ er;
% g=inline( '(cos(t)-(2*c1*t+c2)).^2','t','c1','c2');
g=@(t,c1,c2) ((cos(t)-(2*c1*t+c2)).^2);
er= quad(@(t)g(t,c1,c2),x(i),x(i+1));
eroarefprim=eroarefprim+er;
end
eroaref=eroaref^0.5;
eroarefprim=eroarefprim^0.5;
end


==Cerinta 9==
Explicatie: 
e1, e2, e3, e4 reprezinta eroarile aprozimatii functiei f pe subintervalele 4, 8, 16, 32, iar e1p, e2p, e3p, e4p reprezinta erorile aproximarii primei derivate a functiei f pe aceleasi subintervale.
e1/e2=7.987004e+00
e2/e3=7.996749e+00
e3/e4=7.999187e+00
e1p/e2p=3.993633e+00
e2p/e3p=3.998407e+00
e3p/e4p=3.999602e+00
Explicatie: 
Din rezultatele de mai sus se observa o diferenta de aproximativ 10^-1 intre valorile erorilor, atat pentru aproximarea functiei f, cat si pentru prima derivata a acesteia. Din aceste rezultate reiese faptul ca o impartire a subintervalului cat mai mare asigura o aproximare cat mai buna.
